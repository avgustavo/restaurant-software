package restaurante.gui.pedido;

import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;
import restaurante.dados.cardapio.Item;
import restaurante.dados.pedido.Pedido;
import restaurante.dados.pedido.PedidoBalcao;
import restaurante.dados.pedido.PedidoEntrega;
import restaurante.dados.pedido.PedidoMesa;
import restaurante.exception.ItemJaExistenteException;
import restaurante.fachada.Fachada;

/**
 * @author Lucas
 * @author Gustavo
 * @author Carlos Henrique
 * @author Joao Victor
 */
public class TelaPedido extends javax.swing.JFrame {

    /**
     * Creates new form TelaPedido
     */
    private TelaPedido() {

        initComponents();
        setVisible(true);
        try {
            Fachada.getInstancia().lerCardapio();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ItemJaExistenteException ex) {
            Logger.getLogger(TelaPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaPedidosAbertos.setListData(Fachada.getInstancia().listarPedidos());
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        ImageIcon icon = new ImageIcon("src/imagens/aberto.png");
        icon.setImage(icon.getImage().getScaledInstance(50, 50, 100));
        icone.setIcon(icon);
        this.setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPedidosAbertos = new javax.swing.JList<>();
        txtPedidos = new javax.swing.JLabel();
        btnNovo = new javax.swing.JButton();
        btnEncerrar = new javax.swing.JButton();
        txtInfo = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        icone = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pedidos em Aberto");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        listaPedidosAbertos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaPedidosAbertosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaPedidosAbertos);

        txtPedidos.setText("Pedidos:");

        btnNovo.setText("Novo Pedido");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEncerrar.setText("Encerrar Pedido");
        btnEncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncerrarActionPerformed(evt);
            }
        });

        txtInfo.setText("Clique duas vezes para ver/editar o pedido");

        jButton2.setText("Encerrar caixa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        icone.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtInfo)
                        .addGap(19, 19, 19)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnEncerrar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(icone, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(txtPedidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovo)
                        .addGap(18, 18, 18)
                        .addComponent(btnEncerrar)
                        .addGap(59, 59, 59)
                        .addComponent(icone, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que abre uma janela de novo pedido
     *
     * @param evt
     */
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        TelaNovoPedido novoPedido = new TelaNovoPedido();

    }//GEN-LAST:event_btnNovoActionPerformed

    /**
     * Método que recebe o item selecionado da lista e o exibe na tela de ver o
     * pedido
     *
     * @param evt
     */
    private void listaPedidosAbertosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaPedidosAbertosMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
//            setContentPane(new GuiPedido());
            String itemSelecionado;
            itemSelecionado = listaPedidosAbertos.getSelectedValue();
            String[] numero = itemSelecionado.split("-");
            int num;
            num = Integer.parseInt(numero[0]);

            for (Pedido pedido : Fachada.getInstancia().listarPedidosArray()) {
                if (pedido.getNumero() == num) {
                    pegaInstancia = pedido;
                    break;
                }
            }

            TelaVerPedido tela = new TelaVerPedido();

            tela.getBtnFinalizar().setText("Alterar");

            if (pegaInstancia instanceof PedidoMesa) {
                tela.getRdtipoMesa().setSelected(true);
            } else if (pegaInstancia instanceof PedidoBalcao) {
                tela.getRdtipoBalcao().setSelected(true);
            } else if (pegaInstancia instanceof PedidoEntrega) {
                tela.getRdtipoEntrega().setSelected(true);
            }
            model1.clear();
            model2.clear();
            for (Item item : pegaInstancia.getItens()) {
                model1.addElement(item.getNome());
                model2.addElement(item.getValor());

            }
            tela.getListaAdicionados().setModel(model1);
            tela.getListaValores().setModel(model2);
            tela.getTxtValor().setText(String.valueOf(pegaInstancia.getValor()));

        }
    }//GEN-LAST:event_listaPedidosAbertosMouseClicked

    /**
     * Metodo que chama a guia de pagamento para então, assim, encerrar o pedido
     * selecionado
     *
     * @param evt
     */
    private void btnEncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncerrarActionPerformed
        model1.clear();
        model2.clear();
        String itemSelecionado = listaPedidosAbertos.getSelectedValue();
        if (itemSelecionado != null) {
            TelaEncerrarPedido tela = new TelaEncerrarPedido();
            String[] numero = itemSelecionado.split("-");
            int num;
            num = Integer.parseInt(numero[0]);

            for (Pedido pedido : Fachada.getInstancia().listarPedidosArray()) {
                if (pedido.getNumero() == num) {
                    pegaInstancia = pedido;
                    break;
                }
            }

            for (Item item : pegaInstancia.getItens()) {
                model1.addElement(item.getNome());
                model2.addElement(item.getValor());
            }
            tela.getListaItensConsumidos().setModel(model1);
            tela.getValorConta().setText(String.valueOf(pegaInstancia.getValor()));

    }//GEN-LAST:event_btnEncerrarActionPerformed
    }

    /**
     * Método que abre a janela dos pedidos que já foram encerrados
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        new TelaPedidosEncerrados();
    }

    /**
     * Esse singleton foi usado para chamar os métodos dessa classe em outras
     * sem a necessidade de instancia-la
     */
    private static TelaPedido instancia = null;

    public static TelaPedido getInstancia() {
        if (instancia == null) {
            instancia = new TelaPedido();
        }
        return instancia;
    }

    /**
     * Metodo que atualiza a lista de pedidos abertos apos qualquer alteração de
     * algum pedido
     */
    public void atualizaLista() {
        listaPedidosAbertos.setListData(Fachada.getInstancia().listarPedidos());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        TelaPedido.getInstancia();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncerrar;
    private javax.swing.JButton btnNovo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel icone;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JList<String> listaPedidosAbertos;
    private javax.swing.JLabel txtInfo;
    private javax.swing.JLabel txtPedidos;
    // End of variables declaration//GEN-END:variables

    private Pedido pegaInstancia = null;
    private DefaultListModel model1 = new DefaultListModel();
    private DefaultListModel model2 = new DefaultListModel();

    public Pedido getPegaInstancia() {
        return pegaInstancia;
    }

    public DefaultListModel getModel1() {
        return model1;
    }

    public void setModel1(DefaultListModel model1) {
        this.model1 = model1;
    }

    public void setModel2(DefaultListModel model2) {
        this.model2 = model2;
    }

    public DefaultListModel getModel2() {
        return model2;
    }
}
